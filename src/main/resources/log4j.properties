# level : 是日志记录的优先级，分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者您定义的级别。
#Log4j建议只使用四个级别，优先级从高到低分别是ERROR、WARN、INFO、DEBUG。

#Log4jTest.java中的Logger logger = Logger.getLogger(this.getClass().getName());可能对应了log4j.rootLogger=DEBUG,CONSOLE,A1的配置
log4j.rootLogger=DEBUG,CONSOLE,A1
log4j.addivity.org.apache=true

#将DAO层log记录到DAOLog,allLog中；代码中使用Logger logger = Logger.getLogger("DAO")来获得此配置;
log4j.logger.DAO=DEBUG,A2
# 应用于控制台
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
# 本处设置为"WARN"以上级别在控制台输出(默认情况使用rootLogger中的设置)
log4j.appender.CONSOLE.Threshold=WARN
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.Encoding=GBK
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n

# 每天新建日志
log4j.appender.A1=org.apache.log4j.DailyRollingFileAppender
log4j.appender.A1.File=C:/log4j/website.log
log4j.appender.A1.Encoding=GBK
log4j.appender.A1.Threshold=DEBUG
log4j.appender.A1.DatePattern='.'yyyy-MM-dd
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss,SSS}][%-5p][%l :][%m]%n
#log4j.appender.A1.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}: %L: %m%n
#A2--打印到文件DAOLog中--专门为DAO层服务
log4j.appender.A2=org.apache.log4j.DailyRollingFileAppender
log4j.appender.A2.file=C:/log4j/DAOLog.log
log4j.appender.A2.DatePattern='.'yyyy-MM-dd
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method: %l : %m%n

#  %n代表换行
#  %d代表日期
#  %c代表路径名（Logger.getLogger("DAO")时为DAO:，Logger.getLogger(this.getClass().getName())时为绝对类名）
#  %c{1}为类名，如Log4jTest
#  %l代表类路径及代码所在行数，%L仅代表代码所在行数
#  [%-5p]代表该日志对应的日志级别（%5p），如DEBUG,ERROR，中间的-起到在[]中左对齐的作用
#  %m代表“类名:”（Logger.getLogger("DAO")时为DAO:，Logger.getLogger(this.getClass().getName())时为类名）及日志信息

#----------------------------------------------------------------------------------
#分别说明如下：
#1、使用Logger logger = Logger.getLogger("DAO")获得配置时，属性文件中必须要有对应设置：log4j.logger.DAO=DEBUG,A2
#2、%c为DAO
#3、%l为logger.debug("DAO: Debug info.");的类绝对路径以及代码所在行，
#   log.DAOlogTest.doGet(DAOlogTest.java:23)
#4、%L为logger.debug("DAO: Debug info.");代码所在行 23
#5、%m为类名和日志信息     DAO: Debug info.

#1、使用Logger logger = Logger.getLogger(this.getClass().getName())获得配置时
#2、%c为log.Log4jTest    %c{1}为Log4jTest
#3、%l为 log.Log4jTest.doGet(Log4jTest.java:23)
#4、%L同上
#5、%m为 Debug info.
#
#
#－X号: X信息输出时左对齐；
#%p: 日志信息级别
#%d{}: 日志信息产生时间
#%c: 日志信息所在地（类名）
#%m: 产生的日志具体信息
#%n: 输出日志信息换行